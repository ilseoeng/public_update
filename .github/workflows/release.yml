# .github/workflows/release.yml
name: Build and Release TM

on:
  push:
    tags:
      - "v*"
  workflow_dispatch:

jobs:
  build-and-release:
    runs-on: windows-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '8.x'
        
    - name: Add local NuGet source
      run: dotnet nuget add source "$(pwd)/local-packages" --name LocalTelerik
      
    - name: Restore packages
      run: dotnet restore "TM_server/TM_server.vbproj"
      
    - name: Build TM_server
      run: dotnet build "TM_server/TM_server.vbproj" --configuration Release --no-restore
      
    - name: Build TM_Setup
      run: |
        $vsPath = &"${env:ProgramFiles(x86)}\Microsoft Visual Studio\Installer\vswhere.exe" -latest -requires Microsoft.Component.MSBuild -property installationPath
        & "$vsPath\Common7\IDE\devenv.com" "Win_IRIN.sln" /Build Release /Project "TM_Setup\TM_Setup.vdproj"
        
    - name: Verify MSI file
      run: |
        if (Test-Path "TM_Setup/Release/TM_Setup.msi") {
          $file = Get-Item "TM_Setup/Release/TM_Setup.msi"
          Write-Host "✅ MSI 파일 생성됨: $($file.Length) bytes"
        } else {
          Write-Error "❌ MSI 파일을 찾을 수 없음"
          exit 1
        }
        
    - name: Create GitHub Release
      uses: softprops/action-gh-release@v2
      with:
        tag_name: ${{ github.ref_name }}
        files: TM_Setup/Release/TM_Setup.msi
        generate_release_notes: true
        
    - name: Generate appcast
      shell: pwsh
      run: |
        $repo = "${{ github.repository }}"
        $tag = "${{ github.ref_name }}"
        $msiPath = "TM_Setup/Release/TM_Setup.msi"
        $url = "https://github.com/$repo/releases/download/$tag/TM_Setup.msi"
        $sha256 = (Get-FileHash $msiPath -Algorithm SHA256).Hash
        $version = $tag.TrimStart('v')
        
        $appcast = @"
<?xml version="1.0" encoding="UTF-8"?>
<item>
  <title>TM Server $version</title>
  <version>$version</version>
  <url>$url</url>
  <changelog>https://github.com/$repo/releases/tag/$tag</changelog>
  <mandatory>false</mandatory>
  <args>/passive /norestart</args>
  <checksum algorithm="SHA256">$sha256</checksum>
  <length>$( (Get-Item $msiPath).Length )</length>
  <pubDate>$(Get-Date -Format "yyyy-MM-ddTHH:mm:ssZ")</pubDate>
</item>
"@
        New-Item -ItemType Directory -Force -Path "appcast"
        Set-Content -Path "appcast/tm.xml" -Value $appcast -Encoding UTF8
        Write-Host "✅ Appcast 생성 완료"
        
    - name: Commit appcast
      run: |
        git config user.name "github-actions"
        git config user.email "actions@github.com"
        git add appcast/tm.xml
        git commit -m "Update appcast for ${{ github.ref_name }}" || echo "No changes to commit"
        git push || echo "Nothing to push"
